Brandon Lu                    31 December 2013

                                 FPGA Clock

So, let me explain what all of this insanity is...
The FPGA accepts a clock input from an oscillator at 32,768kHz from pin A8,
divides it by 2^15 (32,768) and gets its seconds signal from this.

This signal passes into BCD counter which then feeds a %10 signal into the
next digit which counts tens of seconds.  When this digit becomes six, a
signal is asserted to reset the digit and the previous seconds digit and
increment the minutes.  We call this signal %60Hz because it is asserted every
60 seconds.

In the minutes section, everything is basically the same as it is in the
seconds section except it is called the minutes section (pretty obvious).

In the hours section, that is when things get a bit more complicated.  The
final design revision will have both a 12 and 24 hour mode (CAUTION: do not
try to set this to 12 hours when the clock is beyond 12 hours(You won't break
anything except a bit of logic)).  In the 12 hour mode, there is a bit of
complicated logic that I don't exactly care to explain (and it involves zero).

With that, there will be an AM/PM indicator for the 12 hour mode.

And I haven't decided about days yet at this moment, so don't bother me about
that yet.

Nor have I decided about months.

Nor have I decided about years. (Leap years are hard though!)